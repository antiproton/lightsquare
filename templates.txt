Template system

A template is defined by the following HTML:

<script type="text/javascript">
	Template.SetStyles("template_id", {
		class_name: {
			backgroundColor: "white"
		},

		another_class_name: {
			//etc
		}
	});
</script>
<div class="template" id="template_id">
	<div data-id="root">
		<div data-id="an_element" data-class="class_name">

		</div>
	</div>
</div>

The script tag is optional.

To insert this template:

var tpl=new Template(document.body, "template_id");

tpl.root; //the div with data-id="root"
tpl.an_element; //the div with data-id="an_element"
tpl.an_element.style.backgroundColor; //"white"

The data-class attribute is a bit like a CSS class.  The Template looks
for nodes that have a data-class attribute, and if an object has been
passed to SetStyles for that template, all its properties will be set on
the element's style.  Obviously it is an extremely limited subset of CSS -
the only "selector" supported is the .class_name {} type - but it has the
advantage that elements within a template won't pick up styles defined in
the CSS for the whole page, and vice versa.

Elements in a template can use normal CSS class names as well.

The class="template" on the container div is just for making the template
invisible - any element with an id could technically be used as a template.

The innerHTML of the container (the one with class="template") is put inside
another div, so the resulting DOM of the above template instance (assuming
document.body was empty before) would be:

<body>
	<div>
		<div data-id="root">
			<div data-id="an_element" data-class="class_name" style="background-color: white">

			</div>
		</div>
	</div>
</body>